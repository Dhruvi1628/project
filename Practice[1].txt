
1. Write a function to reverse a string.  #
2. Check if a given string is a palindrome. # 
3. Count the number of vowels in a string.  
4. Write a function to filter out even numbers from an array.  #
5. Write a function to find the largest number in an array.  
6. Implement a function to calculate the factorial of a number.  #
7. Write a function to check if a given number is prime.  #
8. Create a function to sort an array of numbers in ascending order.  *****
9. Write a function to generate a random number between two given values.  *****
10. Implement a function to convert Celsius to Fahrenheit.  
11. Write a function to merge two arrays and remove duplicates.  #
12. Create a function to find the second largest number in an array.  #
13. Write a function to flatten a nested array.  *****
14. Implement a function to check if two strings are anagrams.  *****
15. Write a function to find the longest word in a string.  *****
16. Create a function to count the occurrences of each character in a string.  
17. Write a function to find the intersection of two arrays.  
18. Implement a function to remove falsy values (`null`, `undefined`, `false`, `0`, `""`) from an array.  *****
19. Write a function to capitalize the first letter of each word in a string.  
20. Create a function to calculate the sum of all numbers in a given range. #  
21. Write a function to implement the debounce functionality.  *****
22. Create a function to implement a deep clone of an object.  *****
23. Write a function to implement a custom version of `Array.prototype.map`.  *****
24. Implement a function to find all permutations of a given string.  *****
25. Create a function to group an array of objects by a specified property.  *****
26. Write a function to check if an object is empty.  *****
27. Implement a function to calculate the Fibonacci sequence up to `n` terms using recursion.  
28. Create a function to implement a memoization pattern for a slow function.  *****
29. Write a function to validate if a given string is a valid JSON.  *****
30. Implement a function to find the shortest path between two nodes in a graph (basic implementation).  *****
